MACRO(CHECK_RPC)
	IF (LINUX AND NOT LIBTIRPC_VERSION_TOO_OLD)
		CHECK_PKGCONFIG()
		PKG_CHECK_MODULES(TIRPC libtirpc)
	ENDIF()

	IF (TIRPC_FOUND)
		IF (TIRPC_VERSION VERSION_LESS 1.0)
			SET (LIBTIRPC_VERSION_TOO_OLD 1 CACHE INTERNAL "libtirpc is too old" FORCE)
			MESSAGE(WARNING
				"Ignoring libtirpc version ${TIRPC_VERSION}, need at least 1.0")
			UNSET(TIRPC_FOUND)
			UNSET(TIRPC_FOUND CACHE)
			GET_CMAKE_PROPERTY(CACHE_VARS CACHE_VARIABLES)
			FOREACH(CACHE_VAR ${CACHE_VARS})
				IF (CACHE_VAR MATCHES "^TIRPC_.*")
					UNSET(${CACHE_VAR})
					UNSET(${CACHE_VAR} CACHE)
				ENDIF()
			ENDFOREACH()
		ENDIF()
	ENDIF()

	IF (TIRPC_FOUND)
		ADD_DEFINITIONS(-DHAVE_TIRPC)

		# RPC headers may be found in /usr/include rather than /usr/include/tirpc
		IF (TIRPC_INCLUDE_DIRS)
			SET (RPC_INCLUDE_DIRS ${TIRPC_INCLUDE_DIRS})
			INCLUDE_DIRECTORIES(SYSTEM "${TIRPC_INCLUDE_DIRS}")
		ELSE()
			FIND_PATH(RPC_INCLUDE_DIRS NAMES rpc/rpc.h)
		ENDIF()
	ELSE()
		FIND_PATH(RPC_INCLUDE_DIRS NAMES rpc/rpc.h)
	ENDIF()

	IF (NOT RPC_INCLUDE_DIRS)
		MESSAGE(FATAL_ERROR
			"Could not find rpc/rpc.h in /usr/include or /usr/include/tirpc")
	ENDIF()
ENDMACRO()